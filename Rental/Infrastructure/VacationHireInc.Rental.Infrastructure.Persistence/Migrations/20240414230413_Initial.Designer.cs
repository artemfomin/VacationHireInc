// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VacationHireInc.Rental.Infrastructure.Persistence;

#nullable disable

namespace VacationHireInc.Rental.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240414230413_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.Minivan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PassengerCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SomeMinivanSpecificProperty")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Minivans", "rental");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.RentItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("BillingPeriod")
                        .HasColumnType("INTEGER");

                    b.Property<string>("QualifiedTypeName")
                        .HasColumnType("TEXT");

                    b.Property<double>("RentCost")
                        .HasColumnType("REAL");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("RentItems");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.RentOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RentItemId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RentStart")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("RentOrders");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.Sedan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PassengerCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SomeSedanSpecificProperty")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Sedans", "rental");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.ServiceRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("NextServiceDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceInstitution")
                        .HasColumnType("TEXT");

                    b.Property<string>("ServiceSummary")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ServiceRecords");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.TechnicalCheck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FkVehicleId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Issuer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FkVehicleId")
                        .IsUnique();

                    b.ToTable("TechnicalChecks");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.Truck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CarryCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CurrentPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Gear")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<uint>("Mileage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SomeTruckSpecificProperty")
                        .HasColumnType("TEXT");

                    b.Property<string>("Vin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Trucks", "rental");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.VehiclePassport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FkVehicleId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Issuer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FkVehicleId")
                        .IsUnique();

                    b.ToTable("VehiclePassports");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.TechnicalCheck", b =>
                {
                    b.HasOne("VacationHireInc.Rental.Core.Domain.Models.Minivan", null)
                        .WithOne("TechnicalCheckCertificate")
                        .HasForeignKey("VacationHireInc.Rental.Core.Domain.Models.TechnicalCheck", "FkVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationHireInc.Rental.Core.Domain.Models.Sedan", null)
                        .WithOne("TechnicalCheckCertificate")
                        .HasForeignKey("VacationHireInc.Rental.Core.Domain.Models.TechnicalCheck", "FkVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationHireInc.Rental.Core.Domain.Models.Truck", null)
                        .WithOne("TechnicalCheckCertificate")
                        .HasForeignKey("VacationHireInc.Rental.Core.Domain.Models.TechnicalCheck", "FkVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.VehiclePassport", b =>
                {
                    b.HasOne("VacationHireInc.Rental.Core.Domain.Models.Minivan", null)
                        .WithOne("Passport")
                        .HasForeignKey("VacationHireInc.Rental.Core.Domain.Models.VehiclePassport", "FkVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationHireInc.Rental.Core.Domain.Models.Sedan", null)
                        .WithOne("Passport")
                        .HasForeignKey("VacationHireInc.Rental.Core.Domain.Models.VehiclePassport", "FkVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VacationHireInc.Rental.Core.Domain.Models.Truck", null)
                        .WithOne("Passport")
                        .HasForeignKey("VacationHireInc.Rental.Core.Domain.Models.VehiclePassport", "FkVehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.Minivan", b =>
                {
                    b.Navigation("Passport");

                    b.Navigation("TechnicalCheckCertificate");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.Sedan", b =>
                {
                    b.Navigation("Passport");

                    b.Navigation("TechnicalCheckCertificate");
                });

            modelBuilder.Entity("VacationHireInc.Rental.Core.Domain.Models.Truck", b =>
                {
                    b.Navigation("Passport");

                    b.Navigation("TechnicalCheckCertificate");
                });
#pragma warning restore 612, 618
        }
    }
}
